// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`fillDotsObjs should convert the subjects assignments to well-formed dot objects 1`] = `
Array [
  Array [
    Object {
      "angle": 90,
      "assignment": Object {
        "dueDate": "2018-09-12T17:00:00.000Z",
        "name": "Assignment #1",
        "subject": "Subject #1",
        "type": "Problem Set",
      },
      "color": "white",
      "distanceFromCenter": 1,
      "key": "Subject #1/Assignment #1/2018-09-12 12:00",
      "maxAngle": 180,
      "radius": 15,
      "startAngle": 0,
    },
    Object {
      "angle": 90,
      "assignment": Object {
        "dueDate": "2018-09-13T19:00:00.000Z",
        "name": "Assignment #2",
        "subject": "Subject #1",
        "type": "Assignment",
      },
      "color": "white",
      "distanceFromCenter": 1,
      "key": "Subject #1/Assignment #2/2018-09-13 14:00",
      "maxAngle": 180,
      "radius": 15,
      "startAngle": 0,
    },
  ],
  Array [],
]
`;

exports[`getDotRows should make fixed sized rows 1`] = `
Array [
  Array [],
  Array [],
  Array [],
  Array [],
  Array [],
  Array [],
  Array [],
  Array [
    Object {
      "distanceFromCenter": 25,
    },
    Object {
      "distanceFromCenter": 23,
    },
  ],
  Array [
    Object {
      "distanceFromCenter": 15,
    },
  ],
  Array [
    Object {
      "distanceFromCenter": 10,
    },
    Object {
      "distanceFromCenter": 7,
    },
    Object {
      "distanceFromCenter": 5,
    },
  ],
]
`;

exports[`getDotRows should make fixed sized rows using the default amount of rows 1`] = `
Array [
  Array [],
  Array [],
  Array [],
  Array [],
  Array [],
  Array [],
  Array [],
  Array [
    Object {
      "distanceFromCenter": 25,
    },
    Object {
      "distanceFromCenter": 23,
    },
  ],
  Array [
    Object {
      "distanceFromCenter": 15,
    },
  ],
  Array [
    Object {
      "distanceFromCenter": 10,
    },
    Object {
      "distanceFromCenter": 7,
    },
    Object {
      "distanceFromCenter": 5,
    },
  ],
]
`;

exports[`getDotRows should make variable sized rows 1`] = `
Array [
  Array [
    Object {
      "distanceFromCenter": 25,
    },
  ],
  Array [
    Object {
      "distanceFromCenter": 15,
    },
    Object {
      "distanceFromCenter": 10,
    },
    Object {
      "distanceFromCenter": 5,
    },
  ],
]
`;

exports[`getDotRows should return null 1`] = `null`;

exports[`getDotRows should return null 2`] = `null`;

exports[`getDotRows should return null 3`] = `null`;

exports[`makeDot should return a dot component 1`] = `
<Dot
  animateFades={true}
  center={
    Object {
      "x": 56.42787609686539,
      "y": 42.33955556881022,
    }
  }
  clickable={true}
  dot={
    Object {
      "angle": 30,
      "assignment": Object {
        "name": "Test Name",
        "type": "Type",
      },
      "distanceFromCenter": 10,
      "r": undefined,
      "startAngle": 10,
    }
  }
  id="Test Name Typeouter"
  onMouseDown={[Function]}
/>
`;

exports[`makeDot should return a dot component 2`] = `
<Dot
  animateFades={true}
  center={
    Object {
      "x": 56.42787609686539,
      "y": 42.33955556881022,
    }
  }
  clickable={true}
  dot={
    Object {
      "angle": 30,
      "assignment": Object {
        "name": "Test Name",
        "type": "Type",
      },
      "distanceFromCenter": 10,
      "r": 15,
      "startAngle": 10,
    }
  }
  id="Test Name Typeouter"
  onMouseDown={[Function]}
  radius={15}
/>
`;

exports[`makeDot should return null because of missing dimensions 1`] = `null`;

exports[`makeDot should return null because of missing dimensions 2`] = `null`;

exports[`the initialization of the component creates an empty dot layer 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Dots
    dims={Object {}}
    getDistanceFromCenter={[Function]}
    subjects={Array []}
    view={Object {}}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [],
      "height": 768,
      "id": "dotsGroup",
      "stroke": "black",
      "strokeWidth": "2",
      "width": 1024,
    },
    "ref": null,
    "rendered": Array [],
    "type": "svg",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [],
        "height": 768,
        "id": "dotsGroup",
        "stroke": "black",
        "strokeWidth": "2",
        "width": 1024,
      },
      "ref": null,
      "rendered": Array [],
      "type": "svg",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`the initialization of the component creates layer of dots 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Dots
    dims={Object {}}
    getDistanceFromCenter={[Function]}
    subjects={
      Array [
        Object {
          "assignments": Array [
            Object {
              "dueDate": "2018-09-12T17:00:00.000Z",
              "name": "Assignment #1",
              "subject": "Subject #1",
              "type": "Problem Set",
            },
            Object {
              "dueDate": "2018-09-13T19:00:00.000Z",
              "name": "Assignment #2",
              "subject": "Subject #1",
              "type": "Assignment",
            },
          ],
          "color": "red",
          "name": "Subject #1",
        },
        Object {
          "assignments": Array [],
          "color": "blue",
          "name": "Subject #2",
        },
      ]
    }
    view={Object {}}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        null,
        null,
      ],
      "height": 768,
      "id": "dotsGroup",
      "stroke": "black",
      "strokeWidth": "2",
      "width": 1024,
    },
    "ref": null,
    "rendered": Array [
      null,
      null,
    ],
    "type": "svg",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          null,
          null,
        ],
        "height": 768,
        "id": "dotsGroup",
        "stroke": "black",
        "strokeWidth": "2",
        "width": 1024,
      },
      "ref": null,
      "rendered": Array [
        null,
        null,
      ],
      "type": "svg",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
